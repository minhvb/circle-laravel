# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    docker:
      # Specify the version you desire here
      - image: circleci/php:7.1-node-browsers

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # Using the RAM variation mitigates I/O contention
      # for database intensive operations.
      # - image: circleci/mysql:5.7-ram
      #
      # - image: redis:2.8.19

    steps:
      - checkout

      - run: sudo apt update # PHP CircleCI 2.0 Configuration File# PHP CircleCI 2.0 Configuration File sudo apt install zlib1g-dev libsqlite3-dev
      - run: sudo docker-php-ext-install zip

      # Download and cache dependencies
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: composer install -n --prefer-dist

      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - ./vendor
      - restore_cache:
          keys:
            - node-v1-{{ checksum "package.json" }}
            - node-v1-
      - run: yarn install
      - save_cache:
          key: node-v1-{{ checksum "package.json" }}
          paths:
            - node_modules

      - run: cp .env.example .env
      - run: php artisan key:generate
      - save_cache:
          key: env
          paths:
            - .env
      # prepare the database
      - run: touch storage/testing.sqlite
      - run: php artisan migrate --env=testing --database=sqlite_testing --force
      - save_cache:
          key: storage
          paths:
            - storage
  phpcs:
    docker:
      # Specify the version you desire here
      - image: circleci/php:7.1-node-browsers
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "composer.json" }}
            - v1-dependencies-
      - restore_cache:
          keys:
            - env
      - restore_cache:
          keys:
            - storage
      - run: ./vendor/bin/phpcs --standard=PSR2 app/
  phpunit:
    docker:
      # Specify the version you desire here
      - image: circleci/php:7.1-node-browsers
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "composer.json" }}
            - v1-dependencies-
      - restore_cache:
          keys:
            - env
      - restore_cache:
          keys:
            - storage
      - run: ./vendor/bin/phpunit
  deploy:
    machine:
      enabled: true
    environment:
      SERVER_HOST: unistack.vn
      SERVER_USER: root
      APP_PATH: /var/www/html/circle-laravel
    working_directory: ~/repo
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - ${UNISTACKVN_SSH_FINGERPRINT}
      - run: sudo apt-get install rsync
      - run:
          name: 'Adding Host key to know_hosts file'
          command: ssh-keyscan -t rsa ${SERVER_HOST} >> ~/.ssh/known_hosts
      - run:
          name: 'Synchronize file'
          command: |
            rsync -azvW ~/repo/ ${SERVER_USER}@${SERVER_HOST}:${APP_PATH}
      - run:
          name: 'Set up file permissions'
          command: ssh ${SERVER_USER}@unistack.vn 'cd /var/www/html/circle-laravel;chmod -R 0777 storage'
      - run:
          command: |
            ssh ${SERVER_USER}@unistack.vn 'cd /var/www/html/circle-laravel;sudo ./deploy_prod.sh'
workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - phpcs:
          requires:
            - build
      - phpunit:
          requires:
            - build
      - hold:
          type: approval
          requires:
            - phpcs
            - phpunit
      - deploy:
          requires:
            - hold
